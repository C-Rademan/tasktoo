/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package xml.reader; //do not change this


//imports
import java.io.InputStream;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import java.io.StringWriter;
import javax.xml.transform.Transformer;



public class App {
    public static void main(String[] args) {
        try {
            // Get the input stream to the XML file
            InputStream inputStream = App.class.getClassLoader().getResourceAsStream("data.xml");
    
            // Create a DocumentBuilderFactory
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    
            // Create a DocumentBuilder from the factory
            DocumentBuilder builder = factory.newDocumentBuilder();
    
            // Parse the input stream into a Document
            Document doc = builder.parse(inputStream);
    
            // Use a Transformer to serialize the document to a string
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            StringWriter writer = new StringWriter();
            transformer.transform(new DOMSource(doc), new StreamResult(writer));
            //String xmlString = writer.toString();
            //System.out.println(xmlString);
    
            // Call the printFields method to print out the field values
            printFields(doc);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    public static void printFields(Document doc) {
        // Get the root element
        Element root = doc.getDocumentElement();
    
        // Get the list of record nodes
        NodeList recordNodes = root.getElementsByTagName("record");
    
        // Loop through the record nodes
        for (int i = 0; i < recordNodes.getLength(); i++) {
            Element recordElement = (Element) recordNodes.item(i);
    
            // Get the fields for this record
            String name = recordElement.getElementsByTagName("name").item(0).getTextContent();
            String postalZip = recordElement.getElementsByTagName("postalZip").item(0).getTextContent();
            String region = recordElement.getElementsByTagName("region").item(0).getTextContent();
            String country = recordElement.getElementsByTagName("country").item(0).getTextContent();
            String address = recordElement.getElementsByTagName("address").item(0).getTextContent();
            String list = recordElement.getElementsByTagName("list").item(0).getTextContent();
    
            // Print out the fields
            System.out.println("Record #" + (i + 1) + ":");
            System.out.println("  Name: " + name);
            System.out.println("  Postal Zip: " + postalZip);
            System.out.println("  Region: " + region);
            System.out.println("  Country: " + country);
            System.out.println("  Address: " + address);
            System.out.println("  List: " + list);
        }
    }
    
}
